version: '3.8'

services:
  # Jaeger All-in-One (for development)
  jaeger:
    image: jaegertracing/all-in-one:1.44
    container_name: jaeger
    ports:
      - "16686:16686"   # Jaeger UI
      - "6831:6831/udp" # Jaeger agent (Thrift compact)
      - "6832:6832/udp" # Jaeger agent (Thrift binary)
      - "14268:14268"   # Jaeger collector (HTTP)
      - "14269:14269"   # Admin port (health check)
    environment:
      - COLLECTOR_OTLP_ENABLED=true
      - LOG_LEVEL=info
    networks:
      - pleasant-cove-network

  # Redis (for circuit breakers and caching)
  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    networks:
      - pleasant-cove-network

  # Optional: Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    networks:
      - pleasant-cove-network

  # Optional: Prometheus for metrics
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    networks:
      - pleasant-cove-network

volumes:
  redis-data:
  grafana-data:
  prometheus-data:

networks:
  pleasant-cove-network:
    driver: bridge 